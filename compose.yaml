version: '3.8'

services:
  t1test:
    container_name: t1test
    depends_on:
      task_db:
        condition: service_healthy
    ports:
      - "8080:8080"
    build:
      context: .
    environment:
      DB_USERNAME: rushglow
      DB_PASSWORD: password1
      DB_NAME: task_db
      DB_HOST: task_db
      DB_PORT: 5432
      APP_PORT: 8080

      KAFKA_CONSUMER_SERVERS: broker_t1:29092
      KAFKA_BOOTSTRAP_SERVERS: broker_t1:29092
    networks:
      - app_network

  task_db:
    container_name: task_db
    image: 'postgres:16.0'
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=rushglow
      - POSTGRES_PASSWORD=password1
      - POSTGRES_DB=task_db
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d task_db -U rushglow"]
      interval: 10s
      retries: 5
      start_period: 5s

  zookeeper_t1:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper_t1
    container_name: zookeeper_t1
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
  broker_t1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker_t1
    container_name: broker_t1
    depends_on:
      - zookeeper_t1
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_t1:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_t1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

networks:
  app_network:
    driver: bridge